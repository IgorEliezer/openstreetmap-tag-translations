#!/usr/bin/env node
const fs = require('fs')
const forEach = require('async-foreach').forEach
const ArgumentParser = require('argparse').ArgumentParser
var parser = new ArgumentParser({
  addHelp: true,
  description: 'Add a tag to all language files'
})

let all = {}
let allData = {}

parser.addArgument('tag', {
  help: 'Tag, e.g. amenity=restaurant'
})

parser.addArgument('description', {
  help: 'Description. E.g. "foo bar"',
  nargs: '?'
})

let args = parser.parseArgs()

let tag = 'tag:' + args.tag
let description = args.description
if (description === null) {
  let m
  if (m = args.tag.match(/^([a-z_:0-9]+)$/)) {
    description = `Key "${m[1]}". See https:\/\/wiki.openstreetmap.org/wiki/Key:${m[1]}`
  }
  else if (m = args.tag.match(/^(cuisine=[^ ]+)$/)) {
    description = `Tag "${m[1]}". See https:\/\/wiki.openstreetmap.org/wiki/Key:cuisine`
  }
  else if (m = args.tag.match(/^([a-z_:0-9]+=[^ ]+)$/)) {
    description = `Tag "${m[1]}". See https:\/\/wiki.openstreetmap.org/wiki/Tag:${m[1]}`
  }
  else if (m = args.tag.match(/^([a-z_:0-9]+=[^ ]+) ([a-z_:0-9]+)$/)) {
    description = `Combined tag "${m[1]}" with key "${m[2]}". See https:\/\/wiki.openstreetmap.org/wiki/Tag:${m[1]} and https:\/\/wiki.openstreetmap.org/wiki/Key:${m[2]}`
  }
  else if (m = args.tag.match(/^([a-z_:0-9]+=[^ ]+) ([a-z_:0-9]+=.*)$/)) {
    description = `Combined tag "${m[1]}" and "${m[2]}". See https:\/\/wiki.openstreetmap.org/wiki/Tag:${m[1]} and https:\/\/wiki.openstreetmap.org/wiki/Tag:${m[2]}`
  }
}

fs.readdir('tags/', function (err, files) {
  forEach(files, function (file) {
    let m = file.match(/^(.*)\.json$/)
    if (!m) {
      return
    }

    let done = this.async()

    fs.readFile('tags/' + file, (err, contents) => {
      let data

      try {
        data = JSON.parse(contents)
      } catch (e) {
        return done()
      }

      if (!data) {
        return done()
      }

      if (tag in data) {
        console.log('File ' + file + ': tag already exists')
      } else {
        data[tag] = {
          message: '',
          description: description
        }
      }

      var ret = {}
      var keys = Object.keys(data)
      keys.sort()

      for (var i = 0; i < keys.length; i++) {
        ret[keys[i]] = data[keys[i]]
      }

      fs.writeFile('tags/' + file, JSON.stringify(ret, null, '    ') + '\n', done)
    })
  },
  allDone)
})

function allDone () {
}
